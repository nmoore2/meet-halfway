# or use your preferred code editorimport { useCallback, useRef } from 'react'; import { GoogleMap, Marker, LoadScript } 
from '@react-google-maps/api';
rm ~/Sites/components/Map.tsx
cd ~/Sites/meet-halfway

interface Location {
    lat: number;
    lng: number;
}

interface Place {
    geometry: {
        location: {
            lat: number;
            lng: number;
        };
    };
    name: string;
    vicinity: string;
}

interface MapProps {
    locationA: Location;
    locationB: Location;
    midpoint: Location;
    places: Place[];
}

const mapContainerStyle = {
    width: '100%',
    height: '400px'
};

export default function Map({ locationA, locationB, midpoint, places }: MapProps) {
    const mapRef = useRef<google.maps.Map>();

    const onLoad = useCallback((map: google.maps.Map) => {
        mapRef.current = map;

        // Fit bounds to show all markers
        const bounds = new google.maps.LatLngBounds();
        bounds.extend(new google.maps.LatLng(locationA.lat, locationA.lng));
        bounds.extend(new google.maps.LatLng(locationB.lat, locationB.lng));
        bounds.extend(new google.maps.LatLng(midpoint.lat, midpoint.lng));
        map.fitBounds(bounds);
    }, [locationA, locationB, midpoint]);

    return (
        <LoadScript googleMapsApiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY!}>
            <GoogleMap
                mapContainerStyle={mapContainerStyle}
                zoom={12}
                center={midpoint}
                onLoad={onLoad}
            >
                {/* Location A Marker */}
                <Marker
                    position={locationA}
                    label="A"
                />

                {/* Location B Marker */}
                <Marker
                    position={locationB}
                    label="B"
                />

                {/* Midpoint Marker */}
                <Marker
                    position={midpoint}
                    icon={{
                        url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
                    }}
                />

                {/* Place Markers */}
                {places.map((place, index) => (
                    <Marker
                        key={index}
                        position={{
                            lat: place.geometry.location.lat,
                            lng: place.geometry.location.lng
                        }}
                        title={place.name}
                        icon={{
                            url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
                        }}
                    />
                ))}
            </GoogleMap>
        </LoadScript>
    );
} 
